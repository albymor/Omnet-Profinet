//
// Generated file, do not edit! Created by nedtool 5.6 from EthFrame.msg.
//

#ifndef __ETHFRAME_M_H
#define __ETHFRAME_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>EthFrame.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet EthFrame
 * {
 *     uint64_t destinationAddress;
 *     uint64_t sourceAddress;
 *     uint16_t typeLength;
 *     uint16_t vlanProtocolId;
 *     uint16_t vlanTagCtrl;
 *     uint8_t data[];
 *     uint32_t fcs;
 * }
 * </pre>
 */
class EthFrame : public ::omnetpp::cPacket
{
  protected:
    uint64_t destinationAddress;
    uint64_t sourceAddress;
    uint16_t typeLength;
    uint16_t vlanProtocolId;
    uint16_t vlanTagCtrl;
    uint8_t *data; // array ptr
    unsigned int data_arraysize;
    uint32_t fcs;

  private:
    void copy(const EthFrame& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const EthFrame&);

  public:
    EthFrame(const char *name=nullptr, short kind=0);
    EthFrame(const EthFrame& other);
    virtual ~EthFrame();
    EthFrame& operator=(const EthFrame& other);
    virtual EthFrame *dup() const override {return new EthFrame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual uint64_t getDestinationAddress() const;
    virtual void setDestinationAddress(uint64_t destinationAddress);
    virtual uint64_t getSourceAddress() const;
    virtual void setSourceAddress(uint64_t sourceAddress);
    virtual uint16_t getTypeLength() const;
    virtual void setTypeLength(uint16_t typeLength);
    virtual uint16_t getVlanProtocolId() const;
    virtual void setVlanProtocolId(uint16_t vlanProtocolId);
    virtual uint16_t getVlanTagCtrl() const;
    virtual void setVlanTagCtrl(uint16_t vlanTagCtrl);
    virtual void setDataArraySize(unsigned int size);
    virtual unsigned int getDataArraySize() const;
    virtual uint8_t getData(unsigned int k) const;
    virtual void setData(unsigned int k, uint8_t data);
    virtual uint32_t getFcs() const;
    virtual void setFcs(uint32_t fcs);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const EthFrame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, EthFrame& obj) {obj.parsimUnpack(b);}


#endif // ifndef __ETHFRAME_M_H

